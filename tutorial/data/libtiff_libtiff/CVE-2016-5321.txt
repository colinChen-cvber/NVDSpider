commit 2f79856097f423eb33796a15fcf700d2ea41bf31
Author: erouault <erouault>
Date:   Mon Jul 11 21:38:31 2016 +0000

    (CVE-2016-5321 / CVE-2016-5323 , bugzilla #2558 / #2559)

diff --git a/ChangeLog b/ChangeLog
index 4e0302fb..62dc1b5e 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -3,7 +3,7 @@
 	* tools/tiffcrop.c: Avoid access outside of stack allocated array
 	on a tiled separate TIFF with more than 8 samples per pixel.
 	Reported by Kaixiang Zhang of the Cloud Security Team, Qihoo 360
-	(CVE-2016-5321, bugzilla #2558)
+	(CVE-2016-5321 / CVE-2016-5323 , bugzilla #2558 / #2559)
 
 2016-07-10 Even Rouault <even.rouault at spatialys.com>
 
diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index 6fc8fc1d..27abc0b1 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -3738,7 +3738,7 @@ combineSeparateSamples8bits (uint8 *in[], uint8 *out, uint32 cols,
 
       matchbits = maskbits << (8 - src_bit - bps); 
       /* load up next sample from each plane */
-      for (s = 0; s < spp; s++)
+      for (s = 0; (s < spp) && (s < MAX_SAMPLES); s++)
         {
 	src = in[s] + src_offset + src_byte;
         buff1 = ((*src) & matchbits) << (src_bit);
@@ -3837,7 +3837,7 @@ combineSeparateSamples16bits (uint8 *in[], uint8 *out, uint32 cols,
       src_bit  = bit_offset % 8;
 
       matchbits = maskbits << (16 - src_bit - bps); 
-      for (s = 0; s < spp; s++)
+      for (s = 0; (s < spp) && (s < MAX_SAMPLES); s++)
         {
 	src = in[s] + src_offset + src_byte;
         if (little_endian)
@@ -3947,7 +3947,7 @@ combineSeparateSamples24bits (uint8 *in[], uint8 *out, uint32 cols,
       src_bit  = bit_offset % 8;
 
       matchbits = maskbits << (32 - src_bit - bps); 
-      for (s = 0; s < spp; s++)
+      for (s = 0; (s < spp) && (s < MAX_SAMPLES); s++)
         {
 	src = in[s] + src_offset + src_byte;
         if (little_endian)
@@ -4073,7 +4073,7 @@ combineSeparateSamples32bits (uint8 *in[], uint8 *out, uint32 cols,
       src_bit  = bit_offset % 8;
 
       matchbits = maskbits << (64 - src_bit - bps); 
-      for (s = 0; s < spp; s++)
+      for (s = 0; (s < spp) && (s < MAX_SAMPLES); s++)
 	{
 	src = in[s] + src_offset + src_byte;
 	if (little_endian)
@@ -4263,7 +4263,7 @@ combineSeparateTileSamples8bits (uint8 *in[], uint8 *out, uint32 cols,
 
       matchbits = maskbits << (8 - src_bit - bps); 
       /* load up next sample from each plane */
-      for (s = 0; s < spp; s++)
+      for (s = 0; (s < spp) && (s < MAX_SAMPLES); s++)
         {
 	src = in[s] + src_offset + src_byte;
         buff1 = ((*src) & matchbits) << (src_bit);
@@ -4362,7 +4362,7 @@ combineSeparateTileSamples16bits (uint8 *in[], uint8 *out, uint32 cols,
       src_bit  = bit_offset % 8;
 
       matchbits = maskbits << (16 - src_bit - bps); 
-      for (s = 0; s < spp; s++)
+      for (s = 0; (s < spp) && (s < MAX_SAMPLES); s++)
         {
 	src = in[s] + src_offset + src_byte;
         if (little_endian)
@@ -4471,7 +4471,7 @@ combineSeparateTileSamples24bits (uint8 *in[], uint8 *out, uint32 cols,
       src_bit  = bit_offset % 8;
 
       matchbits = maskbits << (32 - src_bit - bps); 
-      for (s = 0; s < spp; s++)
+      for (s = 0; (s < spp) && (s < MAX_SAMPLES); s++)
         {
 	src = in[s] + src_offset + src_byte;
         if (little_endian)
@@ -4597,7 +4597,7 @@ combineSeparateTileSamples32bits (uint8 *in[], uint8 *out, uint32 cols,
       src_bit  = bit_offset % 8;
 
       matchbits = maskbits << (64 - src_bit - bps); 
-      for (s = 0; s < spp; s++)
+      for (s = 0; (s < spp) && (s < MAX_SAMPLES); s++)
 	{
 	src = in[s] + src_offset + src_byte;
 	if (little_endian)

commit d9783e4a1476b6787a51c5ae9e9b3156527589f0
Author: erouault <erouault>
Date:   Mon Jul 11 21:26:03 2016 +0000

    * tools/tiffcrop.c: Avoid access outside of stack allocated array
    on a tiled separate TIFF with more than 8 samples per pixel.
    Reported by Kaixiang Zhang of the Cloud Security Team, Qihoo 360
    (CVE-2016-5321, bugzilla #2558)

diff --git a/ChangeLog b/ChangeLog
index e98d54d5..4e0302fb 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,10 @@
+2016-07-11 Even Rouault <even.rouault at spatialys.com>
+
+	* tools/tiffcrop.c: Avoid access outside of stack allocated array
+	on a tiled separate TIFF with more than 8 samples per pixel.
+	Reported by Kaixiang Zhang of the Cloud Security Team, Qihoo 360
+	(CVE-2016-5321, bugzilla #2558)
+
 2016-07-10 Even Rouault <even.rouault at spatialys.com>
 
 	* libtiff/tif_read.c: Fix out-of-bounds read on
diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index d959ae30..6fc8fc1d 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -989,7 +989,7 @@ static int  readSeparateTilesIntoBuffer (TIFF* in, uint8 *obuf,
     nrow = (row + tl > imagelength) ? imagelength - row : tl;
     for (col = 0; col < imagewidth; col += tw)
       {
-      for (s = 0; s < spp; s++)
+      for (s = 0; s < spp && s < MAX_SAMPLES; s++)
         {  /* Read each plane of a tile set into srcbuffs[s] */
 	tbytes = TIFFReadTile(in, srcbuffs[s], col, row, 0, s);
         if (tbytes < 0  && !ignore)
