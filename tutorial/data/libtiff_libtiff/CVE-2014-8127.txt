commit 45c68450bef8ad876f310b495165c513cad8b67d
Author: erouault <erouault>
Date:   Tue Oct 25 21:35:15 2016 +0000

    * libtiff/tif_dir.c: discard values of SMinSampleValue and
    SMaxSampleValue when they have been read and the value of
    SamplesPerPixel is changed afterwards (like when reading a
    OJPEG compressed image with a missing SamplesPerPixel tag,
    and whose photometric is RGB or YCbCr, forcing SamplesPerPixel
    being 3). Otherwise when rewriting the directory (for example
    with tiffset, we will expect 3 values whereas the array had been
    allocated with just one), thus causing a out of bound read access.
    Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2500
    (CVE-2014-8127, duplicate: CVE-2016-3658)
    
    * libtiff/tif_write.c: avoid null pointer dereference on td_stripoffset
    when writing directory, if FIELD_STRIPOFFSETS was artificially set
    for a hack case in OJPEG case.
    Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2500
    (CVE-2014-8127, duplicate: CVE-2016-3658)

diff --git a/ChangeLog b/ChangeLog
index ae09b648..29941fc3 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,22 @@
+2016-10-25 Even Rouault <even.rouault at spatialys.com>
+
+	* libtiff/tif_dir.c: discard values of SMinSampleValue and
+	SMaxSampleValue when they have been read and the value of
+	SamplesPerPixel is changed afterwards (like when reading a
+	OJPEG compressed image with a missing SamplesPerPixel tag,
+	and whose photometric is RGB or YCbCr, forcing SamplesPerPixel
+	being 3). Otherwise when rewriting the directory (for example
+	with tiffset, we will expect 3 values whereas the array had been
+	allocated with just one), thus causing a out of bound read access.
+	Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2500
+	(CVE-2014-8127, duplicate: CVE-2016-3658)
+	
+	* libtiff/tif_write.c: avoid null pointer dereference on td_stripoffset
+	when writing directory, if FIELD_STRIPOFFSETS was artificially set
+	for a hack case	in OJPEG case.
+	Fixes http://bugzilla.maptools.org/show_bug.cgi?id=2500
+	(CVE-2014-8127, duplicate: CVE-2016-3658)
+
 2016-10-25 Even Rouault <even.rouault at spatialys.com>
 
 	* tools/tiffinfo.c: fix out-of-bound read on some tiled images.
diff --git a/libtiff/tif_dir.c b/libtiff/tif_dir.c
index 80734804..160c5d4a 100644
--- a/libtiff/tif_dir.c
+++ b/libtiff/tif_dir.c
@@ -256,6 +256,28 @@ _TIFFVSetField(TIFF* tif, uint32 tag, va_list ap)
 		v = (uint16) va_arg(ap, uint16_vap);
 		if (v == 0)
 			goto badvalue;
+        if( v != td->td_samplesperpixel )
+        {
+            /* See http://bugzilla.maptools.org/show_bug.cgi?id=2500 */
+            if( td->td_sminsamplevalue != NULL )
+            {
+                TIFFWarningExt(tif->tif_clientdata,module,
+                    "SamplesPerPixel tag value is changing, "
+                    "but SMinSampleValue tag was read with a different value. Cancelling it");
+                TIFFClrFieldBit(tif,FIELD_SMINSAMPLEVALUE);
+                _TIFFfree(td->td_sminsamplevalue);
+                td->td_sminsamplevalue = NULL;
+            }
+            if( td->td_smaxsamplevalue != NULL )
+            {
+                TIFFWarningExt(tif->tif_clientdata,module,
+                    "SamplesPerPixel tag value is changing, "
+                    "but SMaxSampleValue tag was read with a different value. Cancelling it");
+                TIFFClrFieldBit(tif,FIELD_SMAXSAMPLEVALUE);
+                _TIFFfree(td->td_smaxsamplevalue);
+                td->td_smaxsamplevalue = NULL;
+            }
+        }
 		td->td_samplesperpixel = (uint16) v;
 		break;
 	case TIFFTAG_ROWSPERSTRIP:
diff --git a/libtiff/tif_dirwrite.c b/libtiff/tif_dirwrite.c
index 7e718181..8a3341e8 100644
--- a/libtiff/tif_dirwrite.c
+++ b/libtiff/tif_dirwrite.c
@@ -542,8 +542,20 @@ TIFFWriteDirectorySec(TIFF* tif, int isimage, int imagedone, uint64* pdiroff)
 			{
 				if (!isTiled(tif))
 				{
-					if (!TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_STRIPOFFSETS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripoffset))
-						goto bad;
+                    /* td_stripoffset might be NULL in an odd OJPEG case. See
+                     *  tif_dirread.c around line 3634.
+                     * XXX: OJPEG hack.
+                     * If a) compression is OJPEG, b) it's not a tiled TIFF,
+                     * and c) the number of strips is 1,
+                     * then we tolerate the absence of stripoffsets tag,
+                     * because, presumably, all required data is in the
+                     * JpegInterchangeFormat stream.
+                     * We can get here when using tiffset on such a file.
+                     * See http://bugzilla.maptools.org/show_bug.cgi?id=2500
+                    */
+                    if (tif->tif_dir.td_stripoffset != NULL &&
+                        !TIFFWriteDirectoryTagLongLong8Array(tif,&ndir,dir,TIFFTAG_STRIPOFFSETS,tif->tif_dir.td_nstrips,tif->tif_dir.td_stripoffset))
+                        goto bad;
 				}
 				else
 				{

commit 0782c759084daaf9e4de7ee6be7543081823455e
Author: erouault <erouault>
Date:   Sun Dec 21 20:58:29 2014 +0000

    * tools/tiff2bw.c: when Photometric=RGB, the utility only works if
    SamplesPerPixel = 3. Enforce that
    http://bugzilla.maptools.org/show_bug.cgi?id=2485 (CVE-2014-8127)

diff --git a/ChangeLog b/ChangeLog
index 0f070dd9..e796feb3 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,9 @@
+2014-12-21  Even Rouault  <even.rouault@spatialys.com>
+
+	* tools/tiff2bw.c: when Photometric=RGB, the utility only works if
+	SamplesPerPixel = 3. Enforce that
+	http://bugzilla.maptools.org/show_bug.cgi?id=2485 (CVE-2014-8127)
+
 2014-12-21  Even Rouault  <even.rouault@spatialys.com>
 
 	* tools/pal2rgb.c, tools/thumbnail.c: fix crash by disabling TIFFTAG_INKNAMES
diff --git a/tools/tiff2bw.c b/tools/tiff2bw.c
index 22467cd1..94b8e31e 100644
--- a/tools/tiff2bw.c
+++ b/tools/tiff2bw.c
@@ -171,6 +171,11 @@ main(int argc, char* argv[])
 		    argv[optind], samplesperpixel);
 		return (-1);
 	}
+	if( photometric == PHOTOMETRIC_RGB && samplesperpixel != 3) {
+		fprintf(stderr, "%s: Bad samples/pixel %u for PHOTOMETRIC_RGB.\n",
+		    argv[optind], samplesperpixel);
+		return (-1);
+	}
 	TIFFGetField(in, TIFFTAG_BITSPERSAMPLE, &bitspersample);
 	if (bitspersample != 8) {
 		fprintf(stderr,

commit 3996fa0f84f4a8b7e65fe4b8f0681711022034ea
Author: erouault <erouault>
Date:   Sun Dec 21 20:04:31 2014 +0000

    * tools/pal2rgb.c, tools/thumbnail.c: fix crash by disabling TIFFTAG_INKNAMES
    copying. The right fix would be to properly copy it, but not worth the burden
    for those esoteric utilities.
    http://bugzilla.maptools.org/show_bug.cgi?id=2484 (CVE-2014-8127)

diff --git a/ChangeLog b/ChangeLog
index 2dc5f4b5..0f070dd9 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,10 @@
+2014-12-21  Even Rouault  <even.rouault@spatialys.com>
+
+	* tools/pal2rgb.c, tools/thumbnail.c: fix crash by disabling TIFFTAG_INKNAMES
+	copying. The right fix would be to properly copy it, but not worth the burden
+	for those esoteric utilities.
+	http://bugzilla.maptools.org/show_bug.cgi?id=2484 (CVE-2014-8127)
+
 2014-12-21  Even Rouault  <even.rouault@spatialys.com>
 
 	* tools/thumbnail.c: fix out-of-buffer write
diff --git a/tools/pal2rgb.c b/tools/pal2rgb.c
index bfe7899d..3fc3de3e 100644
--- a/tools/pal2rgb.c
+++ b/tools/pal2rgb.c
@@ -372,7 +372,7 @@ static struct cpTag {
     { TIFFTAG_CLEANFAXDATA,		1, TIFF_SHORT },
     { TIFFTAG_CONSECUTIVEBADFAXLINES,	1, TIFF_LONG },
     { TIFFTAG_INKSET,			1, TIFF_SHORT },
-    { TIFFTAG_INKNAMES,			1, TIFF_ASCII },
+    /*{ TIFFTAG_INKNAMES,			1, TIFF_ASCII },*/ /* Needs much more complicated logic. See tiffcp */
     { TIFFTAG_DOTRANGE,			2, TIFF_SHORT },
     { TIFFTAG_TARGETPRINTER,		1, TIFF_ASCII },
     { TIFFTAG_SAMPLEFORMAT,		1, TIFF_SHORT },
diff --git a/tools/thumbnail.c b/tools/thumbnail.c
index c50bbffc..73f9c34a 100644
--- a/tools/thumbnail.c
+++ b/tools/thumbnail.c
@@ -257,7 +257,7 @@ static struct cpTag {
     { TIFFTAG_CLEANFAXDATA,		1, TIFF_SHORT },
     { TIFFTAG_CONSECUTIVEBADFAXLINES,	1, TIFF_LONG },
     { TIFFTAG_INKSET,			1, TIFF_SHORT },
-    { TIFFTAG_INKNAMES,			1, TIFF_ASCII },
+    /*{ TIFFTAG_INKNAMES,			1, TIFF_ASCII },*/ /* Needs much more complicated logic. See tiffcp */
     { TIFFTAG_DOTRANGE,			2, TIFF_SHORT },
     { TIFFTAG_TARGETPRINTER,		1, TIFF_ASCII },
     { TIFFTAG_SAMPLEFORMAT,		1, TIFF_SHORT },
